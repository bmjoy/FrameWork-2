// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Tetris.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from Tetris.proto</summary>
  public static partial class TetrisReflection {

    #region Descriptor
    /// <summary>File descriptor for Tetris.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TetrisReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxUZXRyaXMucHJvdG8SCFByb3RvY29sIk4KBk1hcFJlcxIJCgF4GAEgASgF",
            "EgkKAXkYAiABKAUSEAoIcmVzX3R5cGUYAyABKAUSDQoFc3BlZWQYBCABKAUS",
            "DQoFc29jcmUYBSABKAUiQgoQcGtnQ1NKb2luUm9vbVJlcRIPCgdpcm9vbWlk",
            "GAEgASgDEg4KBnVzZXJJZBgCIAEoBRINCgV0b2tlbhgDIAEoCSIeChBwa2dT",
            "Q0pvaW5Sb29tUmVwEgoKAm9rGAEgASgFIiQKFHBrZ0NTUHJvZ3Jlc3NSYXRl",
            "UmVxEgwKBHJhdGUYASABKAUiNAoUcGtnU0NQcm9ncmVzc1JhdGVSZXASDAoE",
            "cmF0ZRgBIAEoBRIOCgZ1c2VyaWQYAiABKAUiHwoRcGtnU0NHYW1lU3RhcnRS",
            "ZXASCgoCb2sYASABKAMiHgoQcGtnU0NHYW1lT3ZlclJlcBIKCgJvaxgBIAEo",
            "BSIcCg5wa2dDU0xvZ091dFJlcRIKCgJvaxgBIAEoBSIcCg5wa2dTQ0xvZ091",
            "dFJlcBIKCgJvaxgBIAEoBSIfChFwa2dDU0hlYXJ0QmVhdFJlcRIKCgJvaxgB",
            "IAEoBSIjChFwa2dTQ0hlYXJ0QmVhdFJlcBIOCgZpdGltZXMYASABKAUiIAoS",
            "cGtnQ1NBUm91bmRPdmVyUmVxEgoKAm9rGAEgASgFIiAKEnBrZ1NDQVJvdW5k",
            "T3ZlclJlcBIKCgJvaxgBIAEoBSIyChpwa2dDU0dldFNlcnZlckxvY2FsVGlt",
            "ZVJlcRIUCgxjbGllbnRfdGltZXMYASABKAMiSAoacGtnU0NHZXRTZXJ2ZXJM",
            "b2NhbFRpbWVSZXASFAoMY2xpZW50X3RpbWVzGAEgASgDEhQKDHNlcnZlcl90",
            "aWVtcxgCIAEoAyIlChZwa2dDU0dldFRpcHNDb250ZW50UmVxEgsKA3JlcRgB",
            "IAEoBSImChZwa2dTQ0dldFRpcHNDb250ZW50UmVwEgwKBHRpcHMYASABKAki",
            "IAoScGtnQ1NHYW1lQ29uZmlnUmVxEgoKAmlkGAEgASgFImcKEnBrZ1NDR2Ft",
            "ZUNvbmZpZ1JlcBIPCgdzcGVlZF95GAEgASgFEg8KB3NwZWVkX3gYAiABKAUS",
            "EAoIc3BlZWRfeTIYAyABKAUSHQoFSXRlbXMYBCADKAsyDi5Qcm90b2NvbC5J",
            "dGVtIj0KDHBrZ0l0ZW1TdGF0ZRIKCgJpZBgBIAEoBRISCgpzdGFydF90aW1l",
            "GAIgASgDEg0KBXN0YXRlGAMgASgFIoMBCglJdGVtU3RhdGUSCgoCaWQYASAB",
            "KAUSEgoKc3RhcnRfdGltZRgCIAEoAxINCgVzdGF0ZRgDIAEoBRIJCgF4GAQg",
            "ASgFEgkKAXkYBSABKAUSDwoHcm90YWlvbhgGIAEoBRIPCgdzcGVlZF94GAcg",
            "ASgFEg8KB3NwZWVkX3kYCCABKAUiIwoESXRlbRIMCgR0eXBlGAEgASgFEg0K",
            "BXZhbHVlGAIgASgFIkwKCnBrZ0NTU3RhdGUSLQoQQ3VycmVudEl0ZW1TdGF0",
            "ZRgBIAEoCzITLlByb3RvY29sLkl0ZW1TdGF0ZRIPCgdVc2VUeXBlGAIgAygF",
            "IloKCnBrZ1NDU3RhdGUSLQoQQ3VycmVudEl0ZW1TdGF0ZRgBIAEoCzITLlBy",
            "b3RvY29sLkl0ZW1TdGF0ZRIdCgVJdGVtcxgCIAMoCzIOLlByb3RvY29sLkl0",
            "ZW0iMwoZcGtnU0NHQ2xpZW50TmV0a1N0YXR1c1JlcBIWCg5uZXR3b3JrX3N0",
            "YXR1cxgBIAEoBSI1Chtwa2dDU1B1c2hDbGllbnROZXRTdGF0dXNSZXESFgoO",
            "bmV0d29ya19zdGF0dXMYASABKAUiJQoScGtnQ1NHZXRJdGVtTHN0UmVxEg8K",
            "B2xzdF9udW0YASABKAUiMwoScGtnU0NHZXRJdGVtTHN0UmVwEh0KBWl0ZW1z",
            "GAEgAygLMg4uUHJvdG9jb2wuSXRlbSq0BAoLUHJvdG9jb2xDbWQSCAoETm9u",
            "ZRAAEhAKC0NTTG9nT3V0UmVxEOsHEhAKC1NDTG9nT3V0UmVwEOwHEhQKD0NT",
            "QVJvdW5kT3ZlclJlcRD0BxIUCg9TQ0FSb3VuZE92ZXJSZXAQ9QcSEwoOQ1NI",
            "ZWFydEJlYXRSZXEQ8gcSEwoOU0NIZWFydEJlYXRSZXAQ8wcSEgoNQ1NKb2lu",
            "Um9vbVJlcRD4BxISCg1TQ0pvaW5Sb29tUmVwEPkHEhYKEUNTUHJvZ3Jlc3NS",
            "YXRlUmVxEP0HEhYKEVNDUHJvZ3Jlc3NSYXRlUmVwEP4HEhMKDlNDR2FtZVN0",
            "YXJ0UmVwEP8HEhwKF0NTR2V0U2VydmVyTG9jYWxUaW1lUmVxEM0IEhwKF1ND",
            "R2V0U2VydmVyTG9jYWxUaW1lUmVwEM4IEhgKE0NTR2V0VGlwc0NvbnRlbnRS",
            "ZXEQuAgSGAoTU0NHZXRUaXBzQ29udGVudFJlcBC5CBIbChZTQ0dDbGllbnRO",
            "ZXRrU3RhdHVzUmVwEJ0IEh0KGENTUHVzaENsaWVudE5ldFN0YXR1c1JlcRCe",
            "CBIUCg9DU0dhbWVDb25maWdSZXEQ/wgSFAoPU0NHYW1lQ29uZmlnUmVwEIAJ",
            "Eg4KCVNDR2FtZVJ1bhCJCRIOCglDU1VwU3RhdGUQkwkSEAoLU0NEb3duU3Rh",
            "dGUQlAkSFAoPQ1NHZXRJdGVtTHN0UmVxEJ0JEhQKD1NDR2V0SXRlbUxzdFJl",
            "cBCeCSotCghFUlJPQ09ERRIRCg1FUlJPQ09ERV9OT05FEAASDgoKU1VDQ0VT",
            "U0ZVTBABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Protocol.ProtocolCmd), typeof(global::Protocol.ERROCODE), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.MapRes), global::Protocol.MapRes.Parser, new[]{ "X", "Y", "ResType", "Speed", "Socre" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSJoinRoomReq), global::Protocol.pkgCSJoinRoomReq.Parser, new[]{ "Iroomid", "UserId", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCJoinRoomRep), global::Protocol.pkgSCJoinRoomRep.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSProgressRateReq), global::Protocol.pkgCSProgressRateReq.Parser, new[]{ "Rate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCProgressRateRep), global::Protocol.pkgSCProgressRateRep.Parser, new[]{ "Rate", "Userid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCGameStartRep), global::Protocol.pkgSCGameStartRep.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCGameOverRep), global::Protocol.pkgSCGameOverRep.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSLogOutReq), global::Protocol.pkgCSLogOutReq.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCLogOutRep), global::Protocol.pkgSCLogOutRep.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSHeartBeatReq), global::Protocol.pkgCSHeartBeatReq.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCHeartBeatRep), global::Protocol.pkgSCHeartBeatRep.Parser, new[]{ "Itimes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSARoundOverReq), global::Protocol.pkgCSARoundOverReq.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCARoundOverRep), global::Protocol.pkgSCARoundOverRep.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSGetServerLocalTimeReq), global::Protocol.pkgCSGetServerLocalTimeReq.Parser, new[]{ "ClientTimes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCGetServerLocalTimeRep), global::Protocol.pkgSCGetServerLocalTimeRep.Parser, new[]{ "ClientTimes", "ServerTiems" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSGetTipsContentReq), global::Protocol.pkgCSGetTipsContentReq.Parser, new[]{ "Req" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCGetTipsContentRep), global::Protocol.pkgSCGetTipsContentRep.Parser, new[]{ "Tips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSGameConfigReq), global::Protocol.pkgCSGameConfigReq.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCGameConfigRep), global::Protocol.pkgSCGameConfigRep.Parser, new[]{ "SpeedY", "SpeedX", "SpeedY2", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgItemState), global::Protocol.pkgItemState.Parser, new[]{ "Id", "StartTime", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.ItemState), global::Protocol.ItemState.Parser, new[]{ "Id", "StartTime", "State", "X", "Y", "Rotaion", "SpeedX", "SpeedY" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Item), global::Protocol.Item.Parser, new[]{ "Type", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSState), global::Protocol.pkgCSState.Parser, new[]{ "CurrentItemState", "UseType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCState), global::Protocol.pkgSCState.Parser, new[]{ "CurrentItemState", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCGClientNetkStatusRep), global::Protocol.pkgSCGClientNetkStatusRep.Parser, new[]{ "NetworkStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSPushClientNetStatusReq), global::Protocol.pkgCSPushClientNetStatusReq.Parser, new[]{ "NetworkStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgCSGetItemLstReq), global::Protocol.pkgCSGetItemLstReq.Parser, new[]{ "LstNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.pkgSCGetItemLstRep), global::Protocol.pkgSCGetItemLstRep.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProtocolCmd {
    [pbr::OriginalName("None")] None = 0,
    /// <summary>
    ///===通用
    /// </summary>
    [pbr::OriginalName("CSLogOutReq")] CslogOutReq = 1003,
    /// <summary>
    ///退出
    /// </summary>
    [pbr::OriginalName("SCLogOutRep")] SclogOutRep = 1004,
    /// <summary>
    ///一盘游戏结束
    /// </summary>
    [pbr::OriginalName("CSARoundOverReq")] CsaroundOverReq = 1012,
    /// <summary>
    ///一盘游戏结束
    /// </summary>
    [pbr::OriginalName("SCARoundOverRep")] ScaroundOverRep = 1013,
    /// <summary>
    ///心跳协议请求
    /// </summary>
    [pbr::OriginalName("CSHeartBeatReq")] CsheartBeatReq = 1010,
    /// <summary>
    ///心跳协议请求
    /// </summary>
    [pbr::OriginalName("SCHeartBeatRep")] ScheartBeatRep = 1011,
    /// <summary>
    ///请求加入房间
    /// </summary>
    [pbr::OriginalName("CSJoinRoomReq")] CsjoinRoomReq = 1016,
    /// <summary>
    ///请求加入房间
    /// </summary>
    [pbr::OriginalName("SCJoinRoomRep")] ScjoinRoomRep = 1017,
    /// <summary>
    ///==
    /// </summary>
    [pbr::OriginalName("CSProgressRateReq")] CsprogressRateReq = 1021,
    /// <summary>
    ///加载进度
    /// </summary>
    [pbr::OriginalName("SCProgressRateRep")] ScprogressRateRep = 1022,
    /// <summary>
    ///游戏开始
    /// </summary>
    [pbr::OriginalName("SCGameStartRep")] ScgameStartRep = 1023,
    /// <summary>
    ///==
    /// </summary>
    [pbr::OriginalName("CSGetServerLocalTimeReq")] CsgetServerLocalTimeReq = 1101,
    /// <summary>
    ///获取服务器时间返回	
    /// </summary>
    [pbr::OriginalName("SCGetServerLocalTimeRep")] ScgetServerLocalTimeRep = 1102,
    /// <summary>
    ///==
    /// </summary>
    [pbr::OriginalName("CSGetTipsContentReq")] CsgetTipsContentReq = 1080,
    /// <summary>
    ///获取游戏提示	
    /// </summary>
    [pbr::OriginalName("SCGetTipsContentRep")] ScgetTipsContentRep = 1081,
    /// <summary>
    ///==
    /// </summary>
    [pbr::OriginalName("SCGClientNetkStatusRep")] ScgclientNetkStatusRep = 1053,
    /// <summary>
    ///推送网络状态请求
    /// </summary>
    [pbr::OriginalName("CSPushClientNetStatusReq")] CspushClientNetStatusReq = 1054,
    /// <summary>
    ///=========
    /// </summary>
    [pbr::OriginalName("CSGameConfigReq")] CsgameConfigReq = 1151,
    /// <summary>
    ///返回游戏配置
    /// </summary>
    [pbr::OriginalName("SCGameConfigRep")] ScgameConfigRep = 1152,
    /// <summary>
    ///返回游戏正式开始
    /// </summary>
    [pbr::OriginalName("SCGameRun")] ScgameRun = 1161,
    /// <summary>
    ///=========
    /// </summary>
    [pbr::OriginalName("CSUpState")] CsupState = 1171,
    /// <summary>
    ///服务器下发状态改变
    /// </summary>
    [pbr::OriginalName("SCDownState")] ScdownState = 1172,
    /// <summary>
    ///==
    /// </summary>
    [pbr::OriginalName("CSGetItemLstReq")] CsgetItemLstReq = 1181,
    /// <summary>
    ///获取队列返回
    /// </summary>
    [pbr::OriginalName("SCGetItemLstRep")] ScgetItemLstRep = 1182,
  }

  /// <summary>
  ///=======消息定义=========
  /// </summary>
  public enum ERROCODE {
    [pbr::OriginalName("ERROCODE_NONE")] None = 0,
    [pbr::OriginalName("SUCCESSFUL")] Successful = 1,
  }

  #endregion

  #region Messages
  public sealed partial class MapRes : pb::IMessage<MapRes> {
    private static readonly pb::MessageParser<MapRes> _parser = new pb::MessageParser<MapRes>(() => new MapRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapRes(MapRes other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      resType_ = other.resType_;
      speed_ = other.speed_;
      socre_ = other.socre_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapRes Clone() {
      return new MapRes(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "res_type" field.</summary>
    public const int ResTypeFieldNumber = 3;
    private int resType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResType {
      get { return resType_; }
      set {
        resType_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 4;
    private int speed_;
    /// <summary>
    ///速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "socre" field.</summary>
    public const int SocreFieldNumber = 5;
    private int socre_;
    /// <summary>
    ///分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Socre {
      get { return socre_; }
      set {
        socre_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (ResType != other.ResType) return false;
      if (Speed != other.Speed) return false;
      if (Socre != other.Socre) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (ResType != 0) hash ^= ResType.GetHashCode();
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (Socre != 0) hash ^= Socre.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (ResType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ResType);
      }
      if (Speed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Speed);
      }
      if (Socre != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Socre);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (ResType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResType);
      }
      if (Speed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (Socre != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Socre);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapRes other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.ResType != 0) {
        ResType = other.ResType;
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      if (other.Socre != 0) {
        Socre = other.Socre;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            ResType = input.ReadInt32();
            break;
          }
          case 32: {
            Speed = input.ReadInt32();
            break;
          }
          case 40: {
            Socre = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///===通用
  /// </summary>
  public sealed partial class pkgCSJoinRoomReq : pb::IMessage<pkgCSJoinRoomReq> {
    private static readonly pb::MessageParser<pkgCSJoinRoomReq> _parser = new pb::MessageParser<pkgCSJoinRoomReq>(() => new pkgCSJoinRoomReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSJoinRoomReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSJoinRoomReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSJoinRoomReq(pkgCSJoinRoomReq other) : this() {
      iroomid_ = other.iroomid_;
      userId_ = other.userId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSJoinRoomReq Clone() {
      return new pkgCSJoinRoomReq(this);
    }

    /// <summary>Field number for the "iroomid" field.</summary>
    public const int IroomidFieldNumber = 1;
    private long iroomid_;
    /// <summary>
    ///房间号 玩家id在消息头种赋值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Iroomid {
      get { return iroomid_; }
      set {
        iroomid_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    /// <summary>
    ///玩家toten
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSJoinRoomReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSJoinRoomReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Iroomid != other.Iroomid) return false;
      if (UserId != other.UserId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Iroomid != 0L) hash ^= Iroomid.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Iroomid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Iroomid);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Iroomid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Iroomid);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSJoinRoomReq other) {
      if (other == null) {
        return;
      }
      if (other.Iroomid != 0L) {
        Iroomid = other.Iroomid;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Iroomid = input.ReadInt64();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCJoinRoomRep : pb::IMessage<pkgSCJoinRoomRep> {
    private static readonly pb::MessageParser<pkgSCJoinRoomRep> _parser = new pb::MessageParser<pkgSCJoinRoomRep>(() => new pkgSCJoinRoomRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCJoinRoomRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCJoinRoomRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCJoinRoomRep(pkgSCJoinRoomRep other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCJoinRoomRep Clone() {
      return new pkgSCJoinRoomRep(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private int ok_;
    /// <summary>
    ///1成功 0失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCJoinRoomRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCJoinRoomRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != 0) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCJoinRoomRep other) {
      if (other == null) {
        return;
      }
      if (other.Ok != 0) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///加载进度
  /// </summary>
  public sealed partial class pkgCSProgressRateReq : pb::IMessage<pkgCSProgressRateReq> {
    private static readonly pb::MessageParser<pkgCSProgressRateReq> _parser = new pb::MessageParser<pkgCSProgressRateReq>(() => new pkgCSProgressRateReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSProgressRateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSProgressRateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSProgressRateReq(pkgCSProgressRateReq other) : this() {
      rate_ = other.rate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSProgressRateReq Clone() {
      return new pkgCSProgressRateReq(this);
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 1;
    private int rate_;
    /// <summary>
    ///0到100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSProgressRateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSProgressRateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rate != other.Rate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rate != 0) hash ^= Rate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rate != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSProgressRateReq other) {
      if (other == null) {
        return;
      }
      if (other.Rate != 0) {
        Rate = other.Rate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rate = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///加载进度
  /// </summary>
  public sealed partial class pkgSCProgressRateRep : pb::IMessage<pkgSCProgressRateRep> {
    private static readonly pb::MessageParser<pkgSCProgressRateRep> _parser = new pb::MessageParser<pkgSCProgressRateRep>(() => new pkgSCProgressRateRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCProgressRateRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCProgressRateRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCProgressRateRep(pkgSCProgressRateRep other) : this() {
      rate_ = other.rate_;
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCProgressRateRep Clone() {
      return new pkgSCProgressRateRep(this);
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 1;
    private int rate_;
    /// <summary>
    ///0到100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private int userid_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCProgressRateRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCProgressRateRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rate != other.Rate) return false;
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rate != 0) hash ^= Rate.GetHashCode();
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rate != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rate);
      }
      if (Userid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rate);
      }
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCProgressRateRep other) {
      if (other == null) {
        return;
      }
      if (other.Rate != 0) {
        Rate = other.Rate;
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rate = input.ReadInt32();
            break;
          }
          case 16: {
            Userid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///游戏开始
  /// </summary>
  public sealed partial class pkgSCGameStartRep : pb::IMessage<pkgSCGameStartRep> {
    private static readonly pb::MessageParser<pkgSCGameStartRep> _parser = new pb::MessageParser<pkgSCGameStartRep>(() => new pkgSCGameStartRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCGameStartRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameStartRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameStartRep(pkgSCGameStartRep other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameStartRep Clone() {
      return new pkgSCGameStartRep(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private long ok_;
    /// <summary>
    ///任意值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCGameStartRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCGameStartRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != 0L) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCGameStartRep other) {
      if (other == null) {
        return;
      }
      if (other.Ok != 0L) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///服务器返回结果
  /// </summary>
  public sealed partial class pkgSCGameOverRep : pb::IMessage<pkgSCGameOverRep> {
    private static readonly pb::MessageParser<pkgSCGameOverRep> _parser = new pb::MessageParser<pkgSCGameOverRep>(() => new pkgSCGameOverRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCGameOverRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameOverRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameOverRep(pkgSCGameOverRep other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameOverRep Clone() {
      return new pkgSCGameOverRep(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private int ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCGameOverRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCGameOverRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != 0) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCGameOverRep other) {
      if (other == null) {
        return;
      }
      if (other.Ok != 0) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgCSLogOutReq : pb::IMessage<pkgCSLogOutReq> {
    private static readonly pb::MessageParser<pkgCSLogOutReq> _parser = new pb::MessageParser<pkgCSLogOutReq>(() => new pkgCSLogOutReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSLogOutReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSLogOutReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSLogOutReq(pkgCSLogOutReq other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSLogOutReq Clone() {
      return new pkgCSLogOutReq(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private int ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSLogOutReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSLogOutReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != 0) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSLogOutReq other) {
      if (other == null) {
        return;
      }
      if (other.Ok != 0) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCLogOutRep : pb::IMessage<pkgSCLogOutRep> {
    private static readonly pb::MessageParser<pkgSCLogOutRep> _parser = new pb::MessageParser<pkgSCLogOutRep>(() => new pkgSCLogOutRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCLogOutRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCLogOutRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCLogOutRep(pkgSCLogOutRep other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCLogOutRep Clone() {
      return new pkgSCLogOutRep(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private int ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCLogOutRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCLogOutRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != 0) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCLogOutRep other) {
      if (other == null) {
        return;
      }
      if (other.Ok != 0) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgCSHeartBeatReq : pb::IMessage<pkgCSHeartBeatReq> {
    private static readonly pb::MessageParser<pkgCSHeartBeatReq> _parser = new pb::MessageParser<pkgCSHeartBeatReq>(() => new pkgCSHeartBeatReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSHeartBeatReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSHeartBeatReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSHeartBeatReq(pkgCSHeartBeatReq other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSHeartBeatReq Clone() {
      return new pkgCSHeartBeatReq(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private int ok_;
    /// <summary>
    ///任意值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSHeartBeatReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSHeartBeatReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != 0) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSHeartBeatReq other) {
      if (other == null) {
        return;
      }
      if (other.Ok != 0) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCHeartBeatRep : pb::IMessage<pkgSCHeartBeatRep> {
    private static readonly pb::MessageParser<pkgSCHeartBeatRep> _parser = new pb::MessageParser<pkgSCHeartBeatRep>(() => new pkgSCHeartBeatRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCHeartBeatRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCHeartBeatRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCHeartBeatRep(pkgSCHeartBeatRep other) : this() {
      itimes_ = other.itimes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCHeartBeatRep Clone() {
      return new pkgSCHeartBeatRep(this);
    }

    /// <summary>Field number for the "itimes" field.</summary>
    public const int ItimesFieldNumber = 1;
    private int itimes_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Itimes {
      get { return itimes_; }
      set {
        itimes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCHeartBeatRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCHeartBeatRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Itimes != other.Itimes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Itimes != 0) hash ^= Itimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Itimes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Itimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Itimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Itimes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCHeartBeatRep other) {
      if (other == null) {
        return;
      }
      if (other.Itimes != 0) {
        Itimes = other.Itimes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Itimes = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgCSARoundOverReq : pb::IMessage<pkgCSARoundOverReq> {
    private static readonly pb::MessageParser<pkgCSARoundOverReq> _parser = new pb::MessageParser<pkgCSARoundOverReq>(() => new pkgCSARoundOverReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSARoundOverReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSARoundOverReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSARoundOverReq(pkgCSARoundOverReq other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSARoundOverReq Clone() {
      return new pkgCSARoundOverReq(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private int ok_;
    /// <summary>
    ///任意值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSARoundOverReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSARoundOverReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != 0) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSARoundOverReq other) {
      if (other == null) {
        return;
      }
      if (other.Ok != 0) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCARoundOverRep : pb::IMessage<pkgSCARoundOverRep> {
    private static readonly pb::MessageParser<pkgSCARoundOverRep> _parser = new pb::MessageParser<pkgSCARoundOverRep>(() => new pkgSCARoundOverRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCARoundOverRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCARoundOverRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCARoundOverRep(pkgSCARoundOverRep other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCARoundOverRep Clone() {
      return new pkgSCARoundOverRep(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private int ok_;
    /// <summary>
    ///任意值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCARoundOverRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCARoundOverRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != 0) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCARoundOverRep other) {
      if (other == null) {
        return;
      }
      if (other.Ok != 0) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgCSGetServerLocalTimeReq : pb::IMessage<pkgCSGetServerLocalTimeReq> {
    private static readonly pb::MessageParser<pkgCSGetServerLocalTimeReq> _parser = new pb::MessageParser<pkgCSGetServerLocalTimeReq>(() => new pkgCSGetServerLocalTimeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSGetServerLocalTimeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetServerLocalTimeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetServerLocalTimeReq(pkgCSGetServerLocalTimeReq other) : this() {
      clientTimes_ = other.clientTimes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetServerLocalTimeReq Clone() {
      return new pkgCSGetServerLocalTimeReq(this);
    }

    /// <summary>Field number for the "client_times" field.</summary>
    public const int ClientTimesFieldNumber = 1;
    private long clientTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientTimes {
      get { return clientTimes_; }
      set {
        clientTimes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSGetServerLocalTimeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSGetServerLocalTimeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientTimes != other.ClientTimes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientTimes != 0L) hash ^= ClientTimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientTimes != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientTimes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTimes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSGetServerLocalTimeReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientTimes != 0L) {
        ClientTimes = other.ClientTimes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientTimes = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCGetServerLocalTimeRep : pb::IMessage<pkgSCGetServerLocalTimeRep> {
    private static readonly pb::MessageParser<pkgSCGetServerLocalTimeRep> _parser = new pb::MessageParser<pkgSCGetServerLocalTimeRep>(() => new pkgSCGetServerLocalTimeRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCGetServerLocalTimeRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetServerLocalTimeRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetServerLocalTimeRep(pkgSCGetServerLocalTimeRep other) : this() {
      clientTimes_ = other.clientTimes_;
      serverTiems_ = other.serverTiems_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetServerLocalTimeRep Clone() {
      return new pkgSCGetServerLocalTimeRep(this);
    }

    /// <summary>Field number for the "client_times" field.</summary>
    public const int ClientTimesFieldNumber = 1;
    private long clientTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientTimes {
      get { return clientTimes_; }
      set {
        clientTimes_ = value;
      }
    }

    /// <summary>Field number for the "server_tiems" field.</summary>
    public const int ServerTiemsFieldNumber = 2;
    private long serverTiems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ServerTiems {
      get { return serverTiems_; }
      set {
        serverTiems_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCGetServerLocalTimeRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCGetServerLocalTimeRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientTimes != other.ClientTimes) return false;
      if (ServerTiems != other.ServerTiems) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientTimes != 0L) hash ^= ClientTimes.GetHashCode();
      if (ServerTiems != 0L) hash ^= ServerTiems.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientTimes != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientTimes);
      }
      if (ServerTiems != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ServerTiems);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientTimes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTimes);
      }
      if (ServerTiems != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTiems);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCGetServerLocalTimeRep other) {
      if (other == null) {
        return;
      }
      if (other.ClientTimes != 0L) {
        ClientTimes = other.ClientTimes;
      }
      if (other.ServerTiems != 0L) {
        ServerTiems = other.ServerTiems;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientTimes = input.ReadInt64();
            break;
          }
          case 16: {
            ServerTiems = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgCSGetTipsContentReq : pb::IMessage<pkgCSGetTipsContentReq> {
    private static readonly pb::MessageParser<pkgCSGetTipsContentReq> _parser = new pb::MessageParser<pkgCSGetTipsContentReq>(() => new pkgCSGetTipsContentReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSGetTipsContentReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetTipsContentReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetTipsContentReq(pkgCSGetTipsContentReq other) : this() {
      req_ = other.req_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetTipsContentReq Clone() {
      return new pkgCSGetTipsContentReq(this);
    }

    /// <summary>Field number for the "req" field.</summary>
    public const int ReqFieldNumber = 1;
    private int req_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Req {
      get { return req_; }
      set {
        req_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSGetTipsContentReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSGetTipsContentReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Req != other.Req) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Req != 0) hash ^= Req.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Req != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Req);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Req != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Req);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSGetTipsContentReq other) {
      if (other == null) {
        return;
      }
      if (other.Req != 0) {
        Req = other.Req;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Req = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCGetTipsContentRep : pb::IMessage<pkgSCGetTipsContentRep> {
    private static readonly pb::MessageParser<pkgSCGetTipsContentRep> _parser = new pb::MessageParser<pkgSCGetTipsContentRep>(() => new pkgSCGetTipsContentRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCGetTipsContentRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetTipsContentRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetTipsContentRep(pkgSCGetTipsContentRep other) : this() {
      tips_ = other.tips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetTipsContentRep Clone() {
      return new pkgSCGetTipsContentRep(this);
    }

    /// <summary>Field number for the "tips" field.</summary>
    public const int TipsFieldNumber = 1;
    private string tips_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tips {
      get { return tips_; }
      set {
        tips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCGetTipsContentRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCGetTipsContentRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tips != other.Tips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tips.Length != 0) hash ^= Tips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tips.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCGetTipsContentRep other) {
      if (other == null) {
        return;
      }
      if (other.Tips.Length != 0) {
        Tips = other.Tips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tips = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgCSGameConfigReq : pb::IMessage<pkgCSGameConfigReq> {
    private static readonly pb::MessageParser<pkgCSGameConfigReq> _parser = new pb::MessageParser<pkgCSGameConfigReq>(() => new pkgCSGameConfigReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSGameConfigReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGameConfigReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGameConfigReq(pkgCSGameConfigReq other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGameConfigReq Clone() {
      return new pkgCSGameConfigReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSGameConfigReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSGameConfigReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSGameConfigReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCGameConfigRep : pb::IMessage<pkgSCGameConfigRep> {
    private static readonly pb::MessageParser<pkgSCGameConfigRep> _parser = new pb::MessageParser<pkgSCGameConfigRep>(() => new pkgSCGameConfigRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCGameConfigRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameConfigRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameConfigRep(pkgSCGameConfigRep other) : this() {
      speedY_ = other.speedY_;
      speedX_ = other.speedX_;
      speedY2_ = other.speedY2_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGameConfigRep Clone() {
      return new pkgSCGameConfigRep(this);
    }

    /// <summary>Field number for the "speed_y" field.</summary>
    public const int SpeedYFieldNumber = 1;
    private int speedY_;
    /// <summary>
    ///下落速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedY {
      get { return speedY_; }
      set {
        speedY_ = value;
      }
    }

    /// <summary>Field number for the "speed_x" field.</summary>
    public const int SpeedXFieldNumber = 2;
    private int speedX_;
    /// <summary>
    ///左右移动的速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedX {
      get { return speedX_; }
      set {
        speedX_ = value;
      }
    }

    /// <summary>Field number for the "speed_y2" field.</summary>
    public const int SpeedY2FieldNumber = 3;
    private int speedY2_;
    /// <summary>
    ///按住向下按钮的下落速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedY2 {
      get { return speedY2_; }
      set {
        speedY2_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Protocol.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(34, global::Protocol.Item.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Item> items_ = new pbc::RepeatedField<global::Protocol.Item>();
    /// <summary>
    ///新的物体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCGameConfigRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCGameConfigRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpeedY != other.SpeedY) return false;
      if (SpeedX != other.SpeedX) return false;
      if (SpeedY2 != other.SpeedY2) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SpeedY != 0) hash ^= SpeedY.GetHashCode();
      if (SpeedX != 0) hash ^= SpeedX.GetHashCode();
      if (SpeedY2 != 0) hash ^= SpeedY2.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SpeedY != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SpeedY);
      }
      if (SpeedX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SpeedX);
      }
      if (SpeedY2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SpeedY2);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SpeedY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedY);
      }
      if (SpeedX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedX);
      }
      if (SpeedY2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedY2);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCGameConfigRep other) {
      if (other == null) {
        return;
      }
      if (other.SpeedY != 0) {
        SpeedY = other.SpeedY;
      }
      if (other.SpeedX != 0) {
        SpeedX = other.SpeedX;
      }
      if (other.SpeedY2 != 0) {
        SpeedY2 = other.SpeedY2;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpeedY = input.ReadInt32();
            break;
          }
          case 16: {
            SpeedX = input.ReadInt32();
            break;
          }
          case 24: {
            SpeedY2 = input.ReadInt32();
            break;
          }
          case 34: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///物体状态
  /// </summary>
  public sealed partial class pkgItemState : pb::IMessage<pkgItemState> {
    private static readonly pb::MessageParser<pkgItemState> _parser = new pb::MessageParser<pkgItemState>(() => new pkgItemState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgItemState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgItemState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgItemState(pkgItemState other) : this() {
      id_ = other.id_;
      startTime_ = other.startTime_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgItemState Clone() {
      return new pkgItemState(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgItemState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgItemState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StartTime != other.StartTime) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgItemState other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 24: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///物体状态
  /// </summary>
  public sealed partial class ItemState : pb::IMessage<ItemState> {
    private static readonly pb::MessageParser<ItemState> _parser = new pb::MessageParser<ItemState>(() => new ItemState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemState(ItemState other) : this() {
      id_ = other.id_;
      startTime_ = other.startTime_;
      state_ = other.state_;
      x_ = other.x_;
      y_ = other.y_;
      rotaion_ = other.rotaion_;
      speedX_ = other.speedX_;
      speedY_ = other.speedY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemState Clone() {
      return new ItemState(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///下落物体的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private long startTime_;
    /// <summary>
    ///状态开始的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private int state_;
    /// <summary>
    ///当前状态 1：生成 2：下落 3：下落完成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 4;
    private int x_;
    /// <summary>
    ///x坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 5;
    private int y_;
    /// <summary>
    ///y坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "rotaion" field.</summary>
    public const int RotaionFieldNumber = 6;
    private int rotaion_;
    /// <summary>
    ///旋转类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rotaion {
      get { return rotaion_; }
      set {
        rotaion_ = value;
      }
    }

    /// <summary>Field number for the "speed_x" field.</summary>
    public const int SpeedXFieldNumber = 7;
    private int speedX_;
    /// <summary>
    ///水平速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedX {
      get { return speedX_; }
      set {
        speedX_ = value;
      }
    }

    /// <summary>Field number for the "speed_y" field.</summary>
    public const int SpeedYFieldNumber = 8;
    private int speedY_;
    /// <summary>
    ///下落速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedY {
      get { return speedY_; }
      set {
        speedY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StartTime != other.StartTime) return false;
      if (State != other.State) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Rotaion != other.Rotaion) return false;
      if (SpeedX != other.SpeedX) return false;
      if (SpeedY != other.SpeedY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Rotaion != 0) hash ^= Rotaion.GetHashCode();
      if (SpeedX != 0) hash ^= SpeedX.GetHashCode();
      if (SpeedY != 0) hash ^= SpeedY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(State);
      }
      if (X != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Y);
      }
      if (Rotaion != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Rotaion);
      }
      if (SpeedX != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedX);
      }
      if (SpeedY != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SpeedY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Rotaion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rotaion);
      }
      if (SpeedX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedX);
      }
      if (SpeedY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemState other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Rotaion != 0) {
        Rotaion = other.Rotaion;
      }
      if (other.SpeedX != 0) {
        SpeedX = other.SpeedX;
      }
      if (other.SpeedY != 0) {
        SpeedY = other.SpeedY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 24: {
            State = input.ReadInt32();
            break;
          }
          case 32: {
            X = input.ReadInt32();
            break;
          }
          case 40: {
            Y = input.ReadInt32();
            break;
          }
          case 48: {
            Rotaion = input.ReadInt32();
            break;
          }
          case 56: {
            SpeedX = input.ReadInt32();
            break;
          }
          case 64: {
            SpeedY = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///物体
  /// </summary>
  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///类型 1-8物体，value为id  9：新的一行，value为新行数据 10：锁死 11：速度加倍，value为加多少
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///客户端上传状态
  /// </summary>
  public sealed partial class pkgCSState : pb::IMessage<pkgCSState> {
    private static readonly pb::MessageParser<pkgCSState> _parser = new pb::MessageParser<pkgCSState>(() => new pkgCSState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSState(pkgCSState other) : this() {
      CurrentItemState = other.currentItemState_ != null ? other.CurrentItemState.Clone() : null;
      useType_ = other.useType_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSState Clone() {
      return new pkgCSState(this);
    }

    /// <summary>Field number for the "CurrentItemState" field.</summary>
    public const int CurrentItemStateFieldNumber = 1;
    private global::Protocol.ItemState currentItemState_;
    /// <summary>
    ///当前物体状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ItemState CurrentItemState {
      get { return currentItemState_; }
      set {
        currentItemState_ = value;
      }
    }

    /// <summary>Field number for the "UseType" field.</summary>
    public const int UseTypeFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_useType_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> useType_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///使用什么道具 1：飞机 2：锁死 3：新一行 4：加速
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UseType {
      get { return useType_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentItemState, other.CurrentItemState)) return false;
      if(!useType_.Equals(other.useType_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentItemState_ != null) hash ^= CurrentItemState.GetHashCode();
      hash ^= useType_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentItemState_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentItemState);
      }
      useType_.WriteTo(output, _repeated_useType_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentItemState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentItemState);
      }
      size += useType_.CalculateSize(_repeated_useType_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSState other) {
      if (other == null) {
        return;
      }
      if (other.currentItemState_ != null) {
        if (currentItemState_ == null) {
          currentItemState_ = new global::Protocol.ItemState();
        }
        CurrentItemState.MergeFrom(other.CurrentItemState);
      }
      useType_.Add(other.useType_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentItemState_ == null) {
              currentItemState_ = new global::Protocol.ItemState();
            }
            input.ReadMessage(currentItemState_);
            break;
          }
          case 18:
          case 16: {
            useType_.AddEntriesFrom(input, _repeated_useType_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///服务器下发状态
  /// </summary>
  public sealed partial class pkgSCState : pb::IMessage<pkgSCState> {
    private static readonly pb::MessageParser<pkgSCState> _parser = new pb::MessageParser<pkgSCState>(() => new pkgSCState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCState(pkgSCState other) : this() {
      CurrentItemState = other.currentItemState_ != null ? other.CurrentItemState.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCState Clone() {
      return new pkgSCState(this);
    }

    /// <summary>Field number for the "CurrentItemState" field.</summary>
    public const int CurrentItemStateFieldNumber = 1;
    private global::Protocol.ItemState currentItemState_;
    /// <summary>
    ///当前下落物体的状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ItemState CurrentItemState {
      get { return currentItemState_; }
      set {
        currentItemState_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protocol.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Protocol.Item.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Item> items_ = new pbc::RepeatedField<global::Protocol.Item>();
    /// <summary>
    ///新的物体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentItemState, other.CurrentItemState)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentItemState_ != null) hash ^= CurrentItemState.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentItemState_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentItemState);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentItemState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentItemState);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCState other) {
      if (other == null) {
        return;
      }
      if (other.currentItemState_ != null) {
        if (currentItemState_ == null) {
          currentItemState_ = new global::Protocol.ItemState();
        }
        CurrentItemState.MergeFrom(other.CurrentItemState);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentItemState_ == null) {
              currentItemState_ = new global::Protocol.ItemState();
            }
            input.ReadMessage(currentItemState_);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCGClientNetkStatusRep : pb::IMessage<pkgSCGClientNetkStatusRep> {
    private static readonly pb::MessageParser<pkgSCGClientNetkStatusRep> _parser = new pb::MessageParser<pkgSCGClientNetkStatusRep>(() => new pkgSCGClientNetkStatusRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCGClientNetkStatusRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGClientNetkStatusRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGClientNetkStatusRep(pkgSCGClientNetkStatusRep other) : this() {
      networkStatus_ = other.networkStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGClientNetkStatusRep Clone() {
      return new pkgSCGClientNetkStatusRep(this);
    }

    /// <summary>Field number for the "network_status" field.</summary>
    public const int NetworkStatusFieldNumber = 1;
    private int networkStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetworkStatus {
      get { return networkStatus_; }
      set {
        networkStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCGClientNetkStatusRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCGClientNetkStatusRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkStatus != other.NetworkStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkStatus != 0) hash ^= NetworkStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkStatus != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NetworkStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetworkStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCGClientNetkStatusRep other) {
      if (other == null) {
        return;
      }
      if (other.NetworkStatus != 0) {
        NetworkStatus = other.NetworkStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NetworkStatus = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgCSPushClientNetStatusReq : pb::IMessage<pkgCSPushClientNetStatusReq> {
    private static readonly pb::MessageParser<pkgCSPushClientNetStatusReq> _parser = new pb::MessageParser<pkgCSPushClientNetStatusReq>(() => new pkgCSPushClientNetStatusReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSPushClientNetStatusReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSPushClientNetStatusReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSPushClientNetStatusReq(pkgCSPushClientNetStatusReq other) : this() {
      networkStatus_ = other.networkStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSPushClientNetStatusReq Clone() {
      return new pkgCSPushClientNetStatusReq(this);
    }

    /// <summary>Field number for the "network_status" field.</summary>
    public const int NetworkStatusFieldNumber = 1;
    private int networkStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetworkStatus {
      get { return networkStatus_; }
      set {
        networkStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSPushClientNetStatusReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSPushClientNetStatusReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkStatus != other.NetworkStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkStatus != 0) hash ^= NetworkStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkStatus != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NetworkStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetworkStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSPushClientNetStatusReq other) {
      if (other == null) {
        return;
      }
      if (other.NetworkStatus != 0) {
        NetworkStatus = other.NetworkStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NetworkStatus = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgCSGetItemLstReq : pb::IMessage<pkgCSGetItemLstReq> {
    private static readonly pb::MessageParser<pkgCSGetItemLstReq> _parser = new pb::MessageParser<pkgCSGetItemLstReq>(() => new pkgCSGetItemLstReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgCSGetItemLstReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetItemLstReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetItemLstReq(pkgCSGetItemLstReq other) : this() {
      lstNum_ = other.lstNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgCSGetItemLstReq Clone() {
      return new pkgCSGetItemLstReq(this);
    }

    /// <summary>Field number for the "lst_num" field.</summary>
    public const int LstNumFieldNumber = 1;
    private int lstNum_;
    /// <summary>
    ///请求个数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LstNum {
      get { return lstNum_; }
      set {
        lstNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgCSGetItemLstReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgCSGetItemLstReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LstNum != other.LstNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LstNum != 0) hash ^= LstNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LstNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LstNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LstNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LstNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgCSGetItemLstReq other) {
      if (other == null) {
        return;
      }
      if (other.LstNum != 0) {
        LstNum = other.LstNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LstNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pkgSCGetItemLstRep : pb::IMessage<pkgSCGetItemLstRep> {
    private static readonly pb::MessageParser<pkgSCGetItemLstRep> _parser = new pb::MessageParser<pkgSCGetItemLstRep>(() => new pkgSCGetItemLstRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pkgSCGetItemLstRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.TetrisReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetItemLstRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetItemLstRep(pkgSCGetItemLstRep other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pkgSCGetItemLstRep Clone() {
      return new pkgSCGetItemLstRep(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Item.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Item> items_ = new pbc::RepeatedField<global::Protocol.Item>();
    /// <summary>
    ///新的物体 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pkgSCGetItemLstRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pkgSCGetItemLstRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pkgSCGetItemLstRep other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
